import Interface, { APILocale } from "../interface.js";
/**
 * Interfaces with all of tournaments related endpoints.
 *
 * @internal @sealed
 */
export default class Tournaments extends Interface {
    /**
     * Fetches data for completed events of all tournaments, a particular tournament, or a set of tournaments.
     *
     * @remarks
     * If `tournamentIdOrIds` is `undefined`, pulls data for all tournaments.
     *
     * @param tournamentId - The id of the tournament from which to pull completed event data.
     * @param locale - The locale of the response.
     * @returns Data on the completed events of the tournament.
     *
     * @see {@link https://vickz84259.github.io/lolesports-api-docs/#operation/getCompletedEvents | vickz84259's endpoint documentation}.
     *
     * @public @sealed
     */
    getCompletedEvents(tournamentId?: string, locale?: APILocale): Promise<{
        data: {
            schedule: {
                events: ({
                    startTime: string;
                    blockName: string | null;
                    match: {
                        teams: {
                            code: string;
                            image: string;
                            name: string;
                        }[];
                    } & {
                        id: string;
                    } & {
                        strategy: {
                            count: 1 | 3 | 5;
                        } & {
                            type: "bestOf";
                        };
                        teams: {
                            result: {
                                gameWins: number;
                            };
                        }[];
                    };
                } & {
                    games: {
                        vods: {
                            parameter: string;
                        }[];
                    }[];
                    match: {
                        type: "normal";
                    };
                })[];
            };
        };
    }>;
    /**
     * Fetches data for the standings of a particular tournament or tournaments.
     *
     * @param tournamentId - The id of the tournament from which to pull standings data.
     * @param locale - The locale of the response.
     * @returns Data on the completed events of a particular tournament.
     *
     * @see {@link https://vickz84259.github.io/lolesports-api-docs/#operation/getCompletedEvents | vickz84259's endpoint documentation}.
     *
     * @public @sealed
     */
    getStandings(tournamentId: string, locale?: APILocale): Promise<{
        data: {
            standings: {
                stages: {
                    name: string;
                    type: "groups" | "bracket";
                    slug: string;
                    sections: {
                        name: string;
                        matches: ({
                            teams: {
                                code: string;
                                image: string;
                                name: string;
                            }[];
                        } & {
                            id: string;
                        } & {
                            state: "completed" | "unstarted" | "inProgress";
                            previousMatchIds: string[] | null;
                            flags: string | null;
                            teams: {
                                id: string;
                                slug: string;
                                result: {
                                    gameWins: number;
                                } & {
                                    outcome?: "loss" | "win" | null | undefined;
                                };
                            }[];
                        })[];
                        rankings: {
                            ordinal: number;
                            teams: ({
                                code: string;
                                image: string;
                                name: string;
                            } & {
                                id?: string | undefined;
                                slug?: string | undefined;
                                record?: {
                                    losses: number;
                                    wins: number;
                                } | null | undefined;
                            })[];
                        }[];
                    }[];
                }[];
            }[];
        };
    }>;
}
//# sourceMappingURL=tournaments.d.ts.map