import Interface, { APILocale } from "../interface.js";
/**
 * Interfaces with all of league related endpoints.
 *
 * @internal @sealed
 */
export default class Leagues extends Interface {
    /**
     * Fetches data on all leagues.
     *
     * @param locale - The locale of the response.
     * @returns Data about all leagues.
     *
     * @see {@link https://vickz84259.github.io/lolesports-api-docs/#operation/getLeagues | vickz84259's endpoint documentation}.
     *
     * @public @sealed
     */
    get(locale?: APILocale): Promise<{
        data: {
            leagues: ({
                name: string;
                slug: string;
            } & {
                id: string;
                image: string;
            } & {
                priority: number;
            } & {
                region: string;
            })[];
        };
    }>;
    /**
     * Fetches data on all tournaments from a specific league.
     *
     * @param leagueId - The id of the league from which to fetch tournaments information.
     * @param locale - The locale of the response.
     * @returns Data on all tournaments from a specific league.
     *
     * @see {@link https://vickz84259.github.io/lolesports-api-docs/#operation/getTournamentsForLeague | vickz84259's endpoint documentation}.
     *
     * @public @sealed
     */
    getTournaments(leagueId?: string, locale?: APILocale): Promise<{
        data: {
            leagues: {
                tournaments: {
                    endDate: string;
                    id: string;
                    slug: string;
                    startDate: string;
                }[];
            }[];
        };
    }>;
    /**
     * Fetches the schedule for a particular league.
     *
     * @param leagueId - The id of the league from which to fetch the schedule.
     * @param locale - The locale of the response.
     * @param pageToken - Base 64 encoded string used to determine the next "page" of data to pull.
     * @returns Data on all tournaments from a specific league.
     *
     * @see {@link https://vickz84259.github.io/lolesports-api-docs/#operation/getSchedule | vickz84259's endpoint documentation}.
     *
     * @public @sealed
     */
    getSchedule(leagueId?: string, pageToken?: string, locale?: APILocale): Promise<{
        data: {
            schedule: {
                updated: string;
                pages: {
                    older: string | null;
                    newer: string | null;
                };
                events: ({
                    startTime: string;
                    blockName: string | null;
                    match: {
                        teams: {
                            code: string;
                            image: string;
                            name: string;
                        }[];
                    } & {
                        id: string;
                    } & {
                        strategy: {
                            count: 1 | 3 | 5;
                        } & {
                            type: "bestOf";
                        };
                        teams: {
                            result: {
                                gameWins: number;
                            };
                        }[];
                    };
                } & {
                    state: "completed" | "unstarted" | "inProgress";
                    type: "match" | "show";
                } & {
                    league: {
                        name: string;
                        slug: string;
                    };
                    match: {
                        teams: {
                            record: {
                                losses: number;
                                wins: number;
                            } | null;
                            result: {
                                outcome: "loss" | "win" | null;
                            };
                        }[];
                    };
                })[];
            };
        };
    }>;
}
//# sourceMappingURL=leagues.d.ts.map