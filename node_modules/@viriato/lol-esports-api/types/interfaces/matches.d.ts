import Interface, { APILocale } from "../interface.js";
/**
 * Interfaces with all of match related endpoints.
 *
 * @internal @sealed
 */
export default class Matches extends Interface {
    /**
     * Fetches event details for a particular match.
     *
     * @param matchId - The id of the match from which pull the event's details.
     * @param locale - The locale of the response.
     * @returns Data on the event details of a particular match.
     *
     * @see {@link https://vickz84259.github.io/lolesports-api-docs/#operation/getGames | vickz84259's endpoint documentation}.
     *
     * @public @sealed
     */
    getEvent(matchId: string, locale?: APILocale): Promise<{
        data: {
            event: {
                match?: {
                    teams: {
                        code: string;
                        image: string;
                        name: string;
                    }[];
                } | undefined;
            } & {
                id: string;
                type: "match" | "show";
                league: {
                    name: string;
                    slug: string;
                } & {
                    id: string;
                    image: string;
                };
                match: {
                    games: ({
                        id: string;
                        state: "completed" | "unstarted" | "inProgress";
                        number: 1 | 3 | 5 | 2 | 4;
                        vods: ({
                            parameter: string;
                        } & {
                            locale: "en-US" | "en-GB" | "en-AU" | "cs-CZ" | "de-DE" | "el-GR" | "es-ES" | "es-MX" | "fr-FR" | "hu-HU" | "it-IT" | "pl-PL" | "pt-BR" | "ro-RO" | "ru-RU" | "tr-TR" | "ja-JP" | "ko-KR";
                            provider: "youtube" | "twitch";
                            offset: number;
                        })[];
                    } & {
                        teams: {
                            id: string;
                            side: "blue" | "red";
                        }[];
                    })[];
                    strategy: {
                        count: 1 | 3 | 5;
                    };
                    teams: {
                        id: string;
                        result: {
                            gameWins: number;
                        };
                    }[];
                };
                streams: ({
                    parameter: string;
                } & {
                    locale: "en-US" | "en-GB" | "en-AU" | "cs-CZ" | "de-DE" | "el-GR" | "es-ES" | "es-MX" | "fr-FR" | "hu-HU" | "it-IT" | "pl-PL" | "pt-BR" | "ro-RO" | "ru-RU" | "tr-TR" | "ja-JP" | "ko-KR";
                    provider: "youtube" | "twitch";
                    offset: number;
                })[] | null;
            };
        };
    }>;
}
//# sourceMappingURL=matches.d.ts.map